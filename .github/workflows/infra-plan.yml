name: Terraform Plan

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - main

jobs:
  EC2-Plan:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'na2na-p' || github.event.pull_request.user.login == 'renovate[bot]'
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Generate github token
        id: generate_token
        uses: ./.github/actions/github-app-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: setup tf files
        run: |
          cd packages/infra/ec2 &&
          cp terraform.tfvars.example terraform.tfvars
          cp setup_base.sh setup.sh
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7
      - name: setup tfcmt
        env:
          TFCMT_VERSION: v3.4.1
        run: |
          wget "https://github.com/suzuki-shunsuke/tfcmt/releases/download/${TFCMT_VERSION}/tfcmt_linux_amd64.tar.gz" -O /tmp/tfcmt.tar.gz
          tar xzf /tmp/tfcmt.tar.gz -C /tmp
          mv /tmp/tfcmt /usr/local/bin
          tfcmt --version
      - run: cd packages/infra/ec2 && terraform init
      - name: terraform plan
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: tfcmt plan -patch -- make backend-infra-plan-ci
